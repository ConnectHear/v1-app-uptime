name: Custom Uptime Workflow

on:
  schedule:
    - cron: "*/5 * * * *"  # Runs every 5 minutes
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository to get access to files
    - name: Checkout Repository
      uses: actions/checkout@v2

    # Step 2: Retrieve the access token via API login
    - name: Retrieve Access Token
      id: get_token
      run: |
        TOKEN=$(curl -X POST https://app.connecthear.org/api/v1/customer/login \
        -H "Content-Type: application/json" \
        -d '{"email": "uptime@connecthear.org", "password": "connecthearapplicationdevelopment"}' | \
        jq -r '.response.detail.token_detail.access_token')
        echo "TOKEN=$TOKEN" >> $GITHUB_ENV

    # Step 3: Replace {{TOKEN}} with the actual token in .upptimerc.yml
    - name: Replace TOKEN in .upptimerc.yml
      run: |
        sed -i "s/Bearer \({{TOKEN}}\|[a-zA-Z0-9._-]*\)/Bearer ${TOKEN}/g" ./.upptimerc.yml
        echo "Token replacement complete."
        
    # Step 4: Commit the changes to .upptimerc.yml with the injected token
    - name: Commit and Push .upptimerc.yml Changes
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        git add .upptimerc.yml
        git commit -m "Update .upptimerc.yml with dynamic token"
        git pull origin master --rebase  # Pull the latest changes and rebase to avoid conflicts
        git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git master


    # Step 5: Run Upptime Monitoring (Trigger after token replacement)
    - name: Run Upptime Monitoring
      uses: upptime/uptime-monitor@v1.38.0
      env:
        GH_PAT: ${{ secrets.GH_PAT || github.token }}
