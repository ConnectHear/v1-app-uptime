owner: connecthear  # GitHub username
repo: v1-app-uptime # Repository name

# GitHub Actions workflow configuration for monitoring APIs
jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Trigger the `main.yml` workflow
      - name: Trigger main.yml Workflow
        id: trigger_main
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/main.yml/dispatches \
          -d '{"ref":"main"}'
      
      # Step 2: Wait for the completion of `main.yml` (Polling)
      - name: Wait for main.yml completion
        id: wait_for_main
        run: |
          workflow_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/runs \
          | jq -r '.workflow_runs[] | select(.name == "Custom Uptime Workflow" and .status == "in_progress") | .id')

          echo "Waiting for workflow $workflow_id to complete..."

          while [[ $(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/actions/runs/$workflow_id | jq -r '.status') == "in_progress" ]]; do
            echo "Workflow is still in progress... waiting 30 seconds"
            sleep 30
          done
          
          status=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/actions/runs/$workflow_id | jq -r '.conclusion')

          if [[ "$status" != "success" ]]; then
            echo "Custom Uptime Workflow failed"
            exit 1
          fi
          echo "Custom Uptime Workflow completed successfully"

# List of API endpoints to monitor with verbose curl logging for debugging
sites:
  # Customer APIs
  - name: Customer Sign-Up API
    url: https://app.connecthear.org/api/v1/customer/sign-up
    method: POST
    body: '{"name": "Test User", "email": "uptime@connecthear.org", "password": "connecthearapplicationdevelopment","date_of_birth": "1990-01-01","mobile_number": "1234567890","gender": "Male","latitude": "25.276987","longitude": "55.296249","code": ""}'
    expectedStatusCodes:
      - 200
      - 201
      - 422
    check: "http"
    headers:
      - "Content-Type: application/json"

  - name: Customer Login API
    url: https://app.connecthear.org/api/v1/customer/login
    method: POST
    body: '{"email": "uptime@connecthear.org", "password": "connecthearapplicationdevelopment"}'
    expectedStatusCodes:
      - 200
      - 401
      - 422
    check: "http"
    headers:
      - "Content-Type: application/json"

  - name: Customer Google Login API
    url: https://app.connecthear.org/api/v1/customer/google-login
    method: POST
    body: '{"name": "Upptime", "email": "uptime@connecthear.org", "google_id": "{{TOKEN}}"}'
    expectedStatusCodes:
      - 200
      - 422
    check: "http"
    headers:
      - "Content-Type: application/json"

  - name: Customer Complaint API (with verbose logging)
    url: https://app.connecthear.org/api/v1/customer/create-complaint
    method: POST
    body: '{"contact_number": "1234567890", "complaint": "This is a test complaint."}'
    expectedStatusCodes:
      - 200
      - 422
    check: "https"
    headers:
      - "Content-Type: application/json"
      - "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}" # Use GitHub secret for token
    # Enable verbose logging
    run: |
      curl -v -X POST "https://app.connecthear.org/api/v1/customer/create-complaint" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer ${{ secrets.AUTH_TOKEN }}" \
      -d '{"contact_number": "1234567890", "complaint": "This is a test complaint."}'

  - name: Customer Resend OTP API
    url: https://app.connecthear.org/api/v1/customer/resend-otp
    method: POST
    body: '{"email": "uptime@connecthear.org"}'
    expectedStatusCodes:
      - 200
      - 422
    check: "http"
    headers:
      - "Content-Type: application/json"

# Status page settings
status-website:
  baseUrl: /v1-app-uptime
  logoUrl: https://avatars.githubusercontent.com/u/94858144?s=400&u=21671f502bedc2181ba2a90086fcf842d6231d1c&v=4
  name: ConnectHear v1 App Uptime
  introTitle: "This is ConnectHear's uptime monitor and status page, powered entirely by GitHub."
  introMessage: This is a status page which uses **real-time** data from our [GitHub repository](https://github.com/ConnectHear/v1-app-uptime). No server required â€” just GitHub Actions, Issues, and Pages.
  navbar:
    - title: Status
      href: /
    - title: GitHub
      href: https://github.com/connecthear/v1-app-uptime


